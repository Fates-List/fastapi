diff --git a/fastapi/utils.py b/fastapi/utils.py
index 8913d85b2d..ba3581e45a 100644
--- a/fastapi/utils.py
+++ b/fastapi/utils.py
@@ -69,28 +69,22 @@ def create_response_field(
         )
 
 
-def create_cloned_field(
-    field: ModelField,
-    *,
-    cloned_types: Optional[Dict[Type[BaseModel], Type[BaseModel]]] = None,
-) -> ModelField:
-    # _cloned_types has already cloned types, to support recursive models
-    if cloned_types is None:
-        cloned_types = dict()
+_CLONED_TYPES_CACHE: Dict[Type[BaseModel], Type[BaseModel]] = dict()
+
+
+def create_cloned_field(field: ModelField) -> ModelField:
     original_type = field.type_
     if is_dataclass(original_type) and hasattr(original_type, "__pydantic_model__"):
         original_type = original_type.__pydantic_model__
     use_type = original_type
     if lenient_issubclass(original_type, BaseModel):
         original_type = cast(Type[BaseModel], original_type)
-        use_type = cloned_types.get(original_type)
+        use_type = _CLONED_TYPES_CACHE.get(original_type)
         if use_type is None:
             use_type = create_model(original_type.__name__, __base__=original_type)
-            cloned_types[original_type] = use_type
+            _CLONED_TYPES_CACHE[original_type] = use_type
             for f in original_type.__fields__.values():
-                use_type.__fields__[f.name] = create_cloned_field(
-                    f, cloned_types=cloned_types
-                )
+                use_type.__fields__[f.name] = create_cloned_field(f)
     new_field = create_response_field(name=field.name, type_=use_type)
     new_field.has_alias = field.has_alias
     new_field.alias = field.alias
@@ -103,13 +97,10 @@ def create_cloned_field(
     new_field.validate_always = field.validate_always
     if field.sub_fields:
         new_field.sub_fields = [
-            create_cloned_field(sub_field, cloned_types=cloned_types)
-            for sub_field in field.sub_fields
+            create_cloned_field(sub_field) for sub_field in field.sub_fields
         ]
     if field.key_field:
-        new_field.key_field = create_cloned_field(
-            field.key_field, cloned_types=cloned_types
-        )
+        new_field.key_field = create_cloned_field(field.key_field)
     new_field.validators = field.validators
     new_field.pre_validators = field.pre_validators
     new_field.post_validators = field.post_validators
